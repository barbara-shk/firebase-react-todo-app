{"version":3,"sources":["firebase.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Form","useState","title","setTitle","type","onChange","e","target","value","onClick","todoRef","database","ref","todo","completed","push","Todo","className","child","id","remove","update","TodoList","todoList","setTodoList","useEffect","on","snapshot","todos","val","console","log","map","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAaEA,IAASC,cAXY,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6EACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBT,IAASU,YAEMV,QAAf,E,OCba,SAASW,IAEpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACI,gCACI,uBAAOC,KAAK,OAAOC,SAfN,SAACC,GAClBH,EAASG,EAAEC,OAAOC,UAed,wBAAQC,QAZG,WACf,IAAMC,EAAUrB,EAASsB,WAAWC,IAAI,SAClCC,EAAO,CACTX,QACAY,WAAW,GAEfJ,EAAQK,KAAKF,IAMT,yB,YCpBG,SAASG,EAAT,GAAuB,IAARH,EAAO,EAAPA,KAY1B,OACI,gCACI,oBAAII,UAAWJ,EAAKC,UAAW,YAAY,GAA3C,SAAgDD,EAAKX,QACrD,wBAAQO,QAbG,WACCpB,EAASsB,WAAWC,IAAI,SAASM,MAAML,EAAKM,IACpDC,UAWJ,oBACA,wBAAQX,QAVK,WACDpB,EAASsB,WAAWC,IAAI,SAASM,MAAML,EAAKM,IACpDE,OAAO,CACXP,WAAYD,EAAKC,aAOjB,0BCfG,SAASQ,IAEpB,MAA+BrB,qBAA/B,mBAAOsB,EAAP,KAAgBC,EAAhB,KAiBA,OAdAC,qBAAU,WACUpC,EAASsB,WAAWC,IAAI,SAChCc,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAQD,EAASE,MACjBN,EAAW,GACjB,IAAK,IAAIJ,KAAMS,EACXL,EAASR,KAAT,aAAeI,MAAMS,EAAMT,KAE/BK,EAAYD,GACZO,QAAQC,IAAIR,QAGlB,IAGE,8BACKA,EAAWA,EAASS,KAChB,SAACnB,EAAKoB,GAAN,OAAgB,cAACjB,EAAD,CAAMH,KAAMA,GAAWoB,MACxC,KCdDC,MATf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAACjB,EAAD,IACA,cAACsB,EAAD,QCJNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1448dcaa.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDeV-wsO8ZGKJ_87EK-xbQARdckV23H3k8\",\r\n    authDomain: \"reacttododb-barbara.firebaseapp.com\",\r\n    databaseURL: \"https://reacttododb-barbara-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"reacttododb-barbara\",\r\n    storageBucket: \"reacttododb-barbara.appspot.com\",\r\n    messagingSenderId: \"857184921605\",\r\n    appId: \"1:857184921605:web:1920e2528d59ccc944146c\",\r\n    measurementId: \"G-BJBPHG91YH\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n  firebase.analytics()\r\n\r\n  export default firebase","import React, { useState } from 'react';\r\nimport firebase from '../firebase';\r\n\r\nexport default function Form() {\r\n    // on utilise le hook state\r\n    const [title, setTitle] = useState('')\r\n    // fonction pour mettre a jour mon title\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n    // on fait l'enregistrement dans la DB\r\n    const createTodo = () => {\r\n        const todoRef = firebase.database().ref('/Todo')\r\n        const todo = {\r\n            title,\r\n            completed: false\r\n        }\r\n        todoRef.push(todo);\r\n    }\r\n    // on affiche notre formulaire\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={handleChange} ></input>\r\n            <button onClick={createTodo}>Add Todo</button>\r\n        </div>\r\n    )\r\n}","import firebase from '../firebase'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function Todo({todo}) {\r\n\r\n    const deleteTodo = () => {\r\n        const todoRef = firebase.database().ref('/Todo').child(todo.id)\r\n        todoRef.remove()\r\n    }\r\n    const completeTodo = () => {\r\n        const todoRef = firebase.database().ref('/Todo').child(todo.id)\r\n        todoRef.update({\r\n            completed: !todo.completed\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            <h3 className={todo.completed? 'completed':''}>{todo.title}</h3>\r\n            <button onClick={deleteTodo}>Delete</button>\r\n            <button onClick={completeTodo}>Completed</button>\r\n        </div>\r\n    )\r\n}","import firebase from '../firebase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList() {\r\n    // on utilise le hook state sur la liste de taches\r\n    const [todoList,setTodoList] = useState()\r\n    // on lance un callback à l'affichage de notre composant\r\n    // pour mettre à jour la liste si une nouvelle entrée est détectée\r\n    useEffect(()=>{\r\n        const todoRef = firebase.database().ref('/Todo')\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = []\r\n            for (let id in todos){\r\n                todoList.push({id,...todos[id]})\r\n            }\r\n            setTodoList(todoList)\r\n            console.log(todoList)\r\n        })\r\n\r\n    },[]);\r\n    // on affiche la liste\r\n    return (\r\n        <div>\r\n            {todoList ? todoList.map(\r\n                ((todo,index) => <Todo todo={todo} key={index} />)\r\n            ) : '' }\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}